<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Value" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEBLAEsAAD/2wBDAAMCAgMCAgMDAwMEAwMEBQgFBQQEBQoHBwYIDAoMDAsKCwsN
        DhIQDQ4RDgsLEBYQERMUFRUVDA8XGBYUGBIUFRT/2wBDAQMEBAUEBQkFBQkUDQsNFBQUFBQUFBQUFBQU
        FBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBQUFBT/wAARCAArACwDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD9A9elk+IHi/VNCOoz6Z4U8PLE+rzWV01tLd3bIJVtmmRleKOK
        JoZn248zz4l37Fljk5rTtG8Jw6Vear8FtQ0sarpK/aZNC0C9T7BqSvlvKmt0bykeYJ+7uQocMqtuePfG
        9SG0ude8M6No+oRrdQeL/G+pLqUsZwZdPhmvZ4FcdHjeCytLZgcho5Cp4Ndv8Q7e50Txb4P8VWGmXeov
        bXE+m6j9giaWVbCaB3zsXlsXMNpjrtDPjgmuzWHuJ/Lo7d/V/ccWk/ft8+vy9DmPEei+DvjV8R/hvdap
        oul+KvD954W1bU7KPVrKO4j+ebSikgSRSFbY5GcZG4j1rjPAXgPwt480/wCClt4r8P6T4gsbb4bieOLV
        7OK4jiYLpwLASAgHBIz6ZrpfhfBd2vj/AMHw3dhcaaE07xcbW2uoTE6WjaxYNbDYeVAhaMAHsBWP8Ov+
        RX+GX/ZJ5f8A0Xp1aRco+7FvTb8SGoy1a/rQ6TQ/h1+z5rGox2vhrRvAC61hmgk8PC0hvoiAcvFJblZU
        YDncjAjGciuj8H+OIfCY1fw54o1kJc6PfG1s77UZVWW/tGijlilOTliolMDOeXeB343YHN/EHT4F/ZUu
        Z7e1g/teDw3FPpMnlL5iaksCmyaLI/132jytmOd+3HOK+Vv+ChHgzxf4t+N+m3Hha0uryzt9Cgt7hrRC
        wSbzp3KtjvseM/QitKcPbz5Ztta7+RnVn7GPNFJPTbzPpv4J3k194Y+A7Tkl5/B8l/KT3nMNkCT7nzpf
        1r3vFeE+D72PTNL+GZsrdls9N8R6t4VeRhgQ28P263QnPTdLZ2yj1LqO4r0H4jeINd0268L6V4cksLfU
        9a1JrV7nUbV7qO2gS1nneTykliZvmijj++ADKDz0PPX9+pp5/mzooPkhr5fkivrX/JePB3/Yta5/6VaT
        XnfwaWBrb4PrciM2x+GOJfNxs2403duzxjHWtTwH4i1jxP8AEzwnd661nJqEOm+LLBpdPt3t4ZFttW0+
        3VxG8khXcIg2N561znw6/wCRX+GX/ZJ5f/RenURjZcr/AK3FKV3zL+tjqPBth+z6PEWmjwsPh3JrqODZ
        Lpcli9yrgcGIId24DP3eaq6L8UfCnwj1zxZp3xC8RadoviPUNZl1Hz7uYRpf2zRxpbTQoSdiJDFHbkd5
        LaVvm3bm39e03T9U/Zpmh1NhFZL4XWZ7gHa0BS1DrKjfwujKHVhgqygggivnP9sP4UeFfiJ8QtA1TxU9
        vb6sugW8TRyNtIHmzMQAe25mrajTVWbjJv8A4YyqydOKaSPoO/0CzfxT4k8E61NNa6b4mnj1zQrqErGY
        buIRtNFAcECaKaCO8UuDvM0hCsIZMT6za3Xw7hu/GfiPVR4t8Rw2raXollb2q2iySTOpWCNNzkzTyJAr
        yFtoEakLGokJ7/xL4Y0rxbp5sNXsYr62LrKocYaORWBSRHGGR1OCrqQykAgggGsHwv8ACXw34V1FNSt4
        dR1DUYQwt7vXNXvNVltty4byWupZDFuHDbNu4YznFcqmrXf9f8P1OhxtKy/r/huhyvhfwu/gr4gfDPQp
        bj7ZcWPg/V4bi7xg3EwuNJ82Uj1d9zH/AHq5n4P2SalY/CK0kLLFcfC8xOUOCAw00HHvzXq/jT4Z6H48
        vdPvdUOqQ3unxzQ29zpOs3mmyrHK0ZkQtbSxllYwxHDEjKA1m3/wQ8J6jZeH7YQ6tp8egWA0vT20nXr+
        wkitcRjymeCdGkH7mP75Y/LnOSacZq13u/8Ag/5kONnpsv8AgGXB8CpZNIg0TVPiD4q17w2sK202i30e
        mJb3VuF2+TK0NlHKUIGGAcbhkEkEg+IfHL9l6T9rf4hXviex8WXnhrT9FB8PQGAeZHemB2eaZSG42zTT
        QEH+K3btivfF+AfhdSpa+8XzqDkxXHjXWZY39mRrsqynurAgjggiu80/S7LRdOtNO060gsNPtIUt7a0t
        o1jihiUBUREUAKoAAAAwAMU1WdN80Xd+g/Zqpo9Ef//Z
</value>
  </data>
  <assembly alias="Telerik.Reporting" name="Telerik.Reporting, Version=11.0.17.118, Culture=neutral, PublicKeyToken=a9d7983dfcc261be" />
  <data name="$this.SnapGridSize" type="Telerik.Reporting.Drawing.Unit, Telerik.Reporting">
    <value>0.1in</value>
  </data>
  <data name="htmlTextBox5.Value" xml:space="preserve">
    <value>&lt;span style="font-family: &amp;quot;times new roman&amp;quot;,&amp;quot;serif&amp;quot;; font-size: 7.5pt; mso-bidi-font-size: 12.0pt; mso-fareast-font-family: pmingliu; mso-font-kerning: 1.0pt; mso-ansi-language: en-us; mso-fareast-language: zh-tw; mso-bidi-language: ar-sa"&gt;A member of the Hong Kong Confederation of Insurance Brokers&lt;/span&gt;</value>
  </data>
  <assembly alias="mscorlib" name="mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="$this.ShowSnapGrid" type="System.Boolean, mscorlib">
    <value>True</value>
  </data>
</root>